{"version":3,"sources":["components/calculator/Display.tsx","redux/calculator/action/reduxCalculatorActionType.ts","components/calculator/Button.tsx","redux/calculator/action/action.ts","components/calculator/Keypad.tsx","pages/Calculator.tsx","redux/calculator/selector/selector.ts","pages/Home.tsx","services/MoviesService.ts","components/ListItem.tsx","pages/Movies.tsx","hooks/useGenres.ts","hooks/usePopularMovies.ts","components/Logo.tsx","components/Navbar.tsx","components/Header.tsx","redux/calculator/reducer/reducer.ts","redux/calculator/store/store.ts","App.tsx","index.tsx"],"names":["Display","ReduxCalculatorActionType","display","id","className","connect","button","dispatch","ButtonWrapper","value","onClick","e","content","type","CLEAR","payload","operation","SUBTRACT","MULTIPLY","DIVIDE","ADD","EQUAL","UPDATE","input","styled","Keypad","ButtonGroup","ButtonRow","div","state","console","log","displayValue","props","Home","MoviesService","path","query","apiKey","axios","_withBaseUrl","movieId","ListItem","tittle","imagePath","subtitle","footer","src","style","width","height","Movies","genres","useState","setGenres","useEffect","getGenres","then","res","data","useGenres","movies","setMovies","getPopularMovies","results","usePopularMovies","length","map","movie","index","poster_path","title","overview","genre_ids","find","genre","name","filter","str","join","Logo","NavBar","items","NavItemWrapper","item","to","route","ul","Header","HeaderWrapper","HeaderInfo","initialState","prevOp","accumulated","history","createStore","action","updateDisplay","includes","slice","states","maths","math","toString","App","store","exact","render","calculatorStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6137fc44.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport interface IProps {\r\n    display: string\r\n}\r\n\r\nfunction Display({display} : IProps) {\r\n  return (\r\n    <>\r\n        <div id=\"display\" className=\"lcd-screen\">\r\n            {display}\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","enum ReduxCalculatorActionType {\r\n    UPDATE = \"UPDATE\",\r\n    ADD = \"ADD\",\r\n    SUBTRACT = \"SUBTRACT\",\r\n    MULTIPLY = \"MULTIPLY\",\r\n    DIVIDE = \"DIVIDE\",\r\n    CLEAR = \"CLEAR\",\r\n    EQUAL = \"EQUAL\",\r\n}\r\n\r\nexport default ReduxCalculatorActionType;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as ReduxCalculatorActions from '../../redux/calculator/action/action'\r\nimport styled from 'styled-components'\r\n\r\nexport interface IProps {\r\n    button: string,\r\n    id: string,\r\n    display: string,\r\n    dispatch: any,\r\n}\r\n\r\nfunction Button({button, id, display, dispatch}: IProps) {\r\n    const handleClick = (e : any) => {\r\n        if (id === \"clear\") {\r\n            dispatch(ReduxCalculatorActions.clearDisplay());\r\n        } else if (id === \"subtract\") {\r\n            dispatch(ReduxCalculatorActions.subtraction(display));\r\n        } else if (id === \"multiply\") {\r\n            dispatch(ReduxCalculatorActions.multiplication(display));\r\n        } else if (id === \"divide\") {\r\n            dispatch(ReduxCalculatorActions.division(display));\r\n        } else if (id === \"add\") {\r\n            dispatch(ReduxCalculatorActions.addition(display));\r\n        } else if (id === \"equals\") {\r\n            dispatch(ReduxCalculatorActions.equal(display));\r\n        } else {\r\n            dispatch(ReduxCalculatorActions.updateDisplay(button));\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <ButtonWrapper\r\n        id={id}\r\n        value={button}\r\n        className=\"button\"\r\n        onClick={handleClick}>\r\n            {button}\r\n        </ButtonWrapper>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default connect()(Button);\r\n\r\n\r\nconst ButtonWrapper = styled.button `\r\n    display: flex;\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: grey;\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n    box-shadow: -3px 5px 10px 0px rgba(0,0,0, .35);\r\n    font-size: 1.5em;\r\n    align-items: center;\r\n    justify-content: center;\r\n`","import ReduxCalculatorActionType from './reduxCalculatorActionType'\r\n\r\nexport interface IReduxCalculatorActionPayload {\r\n    input? : any\r\n    operation : \"num\" | \"operator\" | \"clear\" | \"equal\"\r\n}\r\n\r\nexport interface IReduxCalculatorAction {\r\n    type : ReduxCalculatorActionType,\r\n    payload: IReduxCalculatorActionPayload\r\n}\r\n\r\nexport const updateDisplay = (content: string) : IReduxCalculatorAction => ({\r\n    type: ReduxCalculatorActionType.UPDATE, \r\n    payload: {\r\n      input: content,\r\n      operation: \"num\"\r\n    }\r\n  })\r\n\r\nexport const addition = (content: any) : IReduxCalculatorAction => ({\r\n    type: ReduxCalculatorActionType.ADD, \r\n    payload: {\r\n      operation: \"operator\"\r\n    }\r\n  })\r\n  \r\nexport const subtraction = (content: any) : IReduxCalculatorAction => ({\r\n    type: ReduxCalculatorActionType.SUBTRACT,\r\n    payload: {\r\n      operation: \"operator\"\r\n    }\r\n  })\r\n  \r\nexport const multiplication = (content: any) : IReduxCalculatorAction => ({\r\n    type: ReduxCalculatorActionType.MULTIPLY,\r\n    payload: {\r\n      operation: \"operator\"\r\n    }\r\n  });\r\n  \r\nexport const division = (content: any) : IReduxCalculatorAction => ({\r\n    type: ReduxCalculatorActionType.DIVIDE,\r\n    payload: {\r\n      operation: \"operator\"\r\n    }\r\n  });\r\n  \r\nexport const clearDisplay = () : IReduxCalculatorAction => ({\r\n    type: ReduxCalculatorActionType.CLEAR,\r\n    payload: {\r\n      operation: \"clear\"\r\n    }\r\n  })\r\n  \r\nexport const equal = (content: any) : IReduxCalculatorAction => ({\r\n    type: ReduxCalculatorActionType.EQUAL,\r\n    payload: {\r\n      operation: \"equal\"\r\n    }\r\n  })","import React from 'react';\r\nimport Button from './Button'\r\nimport styled from 'styled-components'\r\n\r\nexport interface IProps {\r\n  display: string\r\n}\r\n\r\nfunction Keypad( {display} : IProps) {\r\n  return (\r\n    <>\r\n      <div className=\"keypad\">\r\n        <ButtonGroup className=\"button-group\">\r\n          <ButtonRow className=\"button-row\">\r\n            <Button button={\"C\"} id={\"clear\"} display={display}/>\r\n            <Button button={\"/\"} id={\"divide\"} display={display} />\r\n            <Button button={\"*\"} id={\"multiply\"} display={display} />\r\n          </ButtonRow>\r\n          <ButtonRow className=\"button-row\">\r\n            <Button button={\"7\"} id={\"seven\"} display={display}/>\r\n            <Button button={\"8\"} id={\"eight\"} display={display}/>\r\n            <Button button={\"9\"} id={\"nine\"} display={display}/>\r\n            <Button button={\"-\"} id={\"subtract\"} display={display} />\r\n          </ButtonRow>\r\n          <ButtonRow className=\"button-row\">\r\n            <Button button={\"4\"} id={\"four\"} display={display}/>\r\n            <Button button={\"5\"} id={\"five\"} display={display}/>\r\n            <Button button={\"6\"} id={\"six\"} display={display}/>\r\n            <Button button={\"+\"} id={\"add\"} display={display}/>\r\n          </ButtonRow>\r\n          <ButtonRow className=\"button-row\">\r\n            <Button button={\"1\"} id={\"one\"} display={display}/>\r\n            <Button button={\"2\"} id={\"two\"} display={display}/>\r\n            <Button button={\"3\"} id={\"three\"} display={display}/>\r\n          </ButtonRow>\r\n        </ButtonGroup>\r\n        <ButtonRow className=\"button-row\">\r\n            <Button button={\"0\"} id={\"zero\"} display={display}/>\r\n            <Button button={\".\"} id={\"decimal\"} display={display}/>\r\n            <Button button={\"=\"} id={\"equals\"} display={display}/>\r\n        </ButtonRow>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Keypad;\r\n\r\nconst ButtonGroup = styled.div `\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  width: 75%;\r\n  height: 60%;\r\n`\r\n\r\nconst ButtonRow = styled.div `\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  height: 15%;\r\n  justify-content: start;\r\n  align-items: center;\r\n`\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Display from \"../components/calculator/Display\";\r\nimport Keypad from \"../components/calculator/Keypad\";\r\nimport { getDisplay } from \"./../redux/calculator/selector/selector\";\r\n\r\nexport interface IProps {\r\n  display: string,\r\n  dispatch: any\r\n}\r\n\r\nfunction Calculator(props : IProps) {\r\n  return (\r\n    <>\r\n      <div className=\"calculator-body\">\r\n        <div className=\"display-block\">\r\n          <Display\r\n            display={props.display}\r\n          />\r\n        </div>\r\n        <div className=\"keypad-block\">\r\n          <Keypad\r\n            display={props.display}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  console.log('oldState', state)\r\n  const displayValue = getDisplay(state);\r\n  console.log('newState', displayValue)\r\n  return ({\r\n    display: displayValue,\r\n  });\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Calculator);\r\n","export const getDisplay = (store: any) => store.display;","import React from 'react';\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <h1>Home</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\nexport class MoviesService {\r\n  static apiKey = 'd416af5d4faee64e25ab001d87aab5c3';\r\n\r\n  static _withBaseUrl(path : string, query : string = '') {\r\n    return `https://api.themoviedb.org/3/${path}?${query}&api_key=${MoviesService.apiKey}`;\r\n  }\r\n\r\n  static getPopularMovies() {\r\n    return axios(MoviesService._withBaseUrl('movie/popular'));\r\n  }\r\n\r\n  static getMovieById(movieId : string) {\r\n    return axios(MoviesService._withBaseUrl(`movie/${movieId}`));\r\n  }\r\n\r\n  static getGenres() {\r\n    return axios(MoviesService._withBaseUrl(`genre/movie/list`));\r\n  } \r\n\r\n}","import React from 'react';\r\n\r\nexport interface IProps { \r\n    id: number,\r\n    imagePath: string | null\r\n    tittle: string,\r\n    subtitle: string,\r\n    footer: string\r\n}\r\n\r\nfunction ListItem({id, tittle, imagePath, subtitle, footer}:IProps) {\r\n  return (\r\n    <>\r\n        <div>\r\n            {imagePath && <img src={imagePath} style={{width: '200px', height:'200px'}} />}\r\n            <h3>{tittle}</h3>\r\n            <p>{subtitle}</p>\r\n            <p>{footer}</p>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport { Genre, useGenres } from '../hooks/useGenres'\r\nimport { Movie, usePopularMovies } from '../hooks/usePopularMovies'\r\nimport ListItem from '../components/ListItem'\r\n\r\nfunction Movies() {\r\n  const genres : Genre[] = useGenres();\r\n  const movies : Movie[] = usePopularMovies();\r\n  return (\r\n    <>\r\n        {\r\n          movies.length > 0 &&  genres.length > 0 && \r\n          movies.map((movie: Movie, index : number) => {\r\n            return <ListItem \r\n                      key={index}\r\n                      id={movie.id}\r\n                      imagePath={\r\n                        movie.poster_path ?\r\n                         `https://image.tmdb.org/t/p/original${movie.poster_path}`:\r\n                          null\r\n                      }\r\n                      tittle={movie.title}\r\n                      subtitle={movie.overview}\r\n                      footer={\r\n                        movie.genre_ids.map((id: number) => {\r\n                          return genres.find((genre : Genre) => genre.id === id)?.name\r\n                        })\r\n                          .filter((str: string | undefined) => {\r\n                            return str != null\r\n                          })\r\n                          .join(',')\r\n                      }\r\n                      />\r\n          })\r\n        }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import { useEffect, useState } from 'react';\r\nimport { MoviesService } from '../services/MoviesService';\r\n\r\nexport interface Genre {\r\n    id: number,\r\n    name: string\r\n}\r\n\r\nexport function useGenres(): Genre[] {\r\n    const [genres, setGenres] = useState<Genre[]>([]);\r\n    useEffect(() => {\r\n        MoviesService.getGenres()\r\n        .then((res: any) => setGenres(res.data.genres))\r\n    }, []);\r\n\r\n    return genres\r\n}\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport { MoviesService } from '../services/MoviesService';\r\n\r\nexport interface Movie {\r\n    poster_path : string | null,\r\n    overview : string,\r\n    id: number,\r\n    genre_ids: number[],\r\n    title: string,\r\n}\r\n\r\nexport const usePopularMovies = () => {\r\n  const [movies, setMovies] = useState<Movie[]>([]);\r\n\r\n  useEffect(() => {\r\n    MoviesService.getPopularMovies()\r\n      .then((res) => setMovies(res.data.results))\r\n  }, []);\r\n\r\n  return movies;\r\n}\r\n\r\n","import React from 'react';\r\n\r\nfunction Logo() {\r\n  return (\r\n    <>\r\n      <h1>Logo</h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nexport interface IProps {\r\n    items: INavBarItem[]    \r\n}\r\n\r\nexport interface INavBarItem {\r\n    route: string,\r\n    title: string    \r\n}\r\n\r\nexport const NavBar = ({items} : IProps) => (\r\n  <nav className=\"main-nav\">\r\n    <NavItemWrapper>\r\n        {items.map((item : INavBarItem, index: number) => (\r\n            <li key = {index}>\r\n                <Link to={item.route}>{item.title}</Link>\r\n            </li>\r\n        ))}\r\n    </NavItemWrapper>\r\n  </nav>\r\n);\r\n\r\nconst NavItemWrapper = styled.ul`\r\n  list-style: none;\r\n\r\n  li {\r\n    display: inline-block;\r\n    margin-right: 16px;\r\n  }\r\n`\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Logo from './Logo';\r\nimport { INavBarItem, NavBar } from './Navbar';\r\n\r\nfunction Header() {\r\n  const items : INavBarItem[] = [\r\n    {\r\n        title: \"Home\",\r\n        route: \"/home\"\r\n    },\r\n    {\r\n        title: \"Calculadora\",\r\n        route: \"/calculator\"\r\n    },\r\n    {\r\n        title: \"Filmes\",\r\n        route: \"/movies\"\r\n    },\r\n  ]\r\n  return (\r\n    <>\r\n    <HeaderWrapper className=\"header-wrapper\">\r\n      <div className=\"main-logo\">\r\n        <Logo />\r\n      </div>\r\n      <HeaderInfo className=\"header-info\">\r\n        <NavBar items={items} />\r\n      </HeaderInfo>\r\n  </HeaderWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex\r\n`\r\n\r\nconst HeaderInfo = styled.div`\r\n  width: 80%;\r\n  text-align: right;\r\n`","import ReduxCalculatorActionType from '../action/reduxCalculatorActionType'\r\nimport * as math from 'mathjs'\r\nimport { IReduxCalculatorAction, IReduxCalculatorActionPayload } from '../action/action';\r\n\r\nexport interface IReduxCalculatorStoreState {\r\n    display: string,\r\n    prevOp: string\r\n    accumulated: string,\r\n    history: string    \r\n}\r\n\r\nconst initialState : IReduxCalculatorStoreState = {\r\n  display: '0',\r\n  prevOp: \"\",\r\n  accumulated: \"0\",\r\n  history: '0'\r\n}\r\n\r\nexport default function (state : IReduxCalculatorStoreState = initialState, action : IReduxCalculatorAction) {\r\n  switch (action.type) {\r\n    case ReduxCalculatorActionType.UPDATE: {\r\n      const updateDisplay : IReduxCalculatorActionPayload = action.payload;\r\n      if ((state.display.includes('.') && updateDisplay.input === \".\") || state.display.length > 8) {\r\n        return {\r\n          ...state,\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          display: state.display == '0' || state.prevOp === \"operator\" ? updateDisplay.input\r\n            : state.display + updateDisplay.input,\r\n          prevOp: updateDisplay.operation,\r\n        }\r\n      }\r\n    }\r\n    case ReduxCalculatorActionType.ADD: {\r\n      const history = () => state.prevOp === \"operator\" ? state.history.slice(0, state.history.length - 4)\r\n        : state.history;\r\n      return {\r\n        ...state,\r\n        display: state.display,\r\n        history: state.history == '0' && state.accumulated == \"0\" ? state.display + \" + \"\r\n          : state.accumulated != \"0\" ? state.accumulated + \" + \"\r\n            : history() + state.display + \" + \",\r\n        prevOp: \"operator\"\r\n      }\r\n    }\r\n    case ReduxCalculatorActionType.SUBTRACT: {\r\n      const history = () => state.prevOp === \"operator\" ? state.history.slice(0, state.history.length - 4)\r\n        : state.history;\r\n      return {\r\n        ...state,\r\n        display: state.display,\r\n        history: state.history == '0' && state.accumulated == \"0\" ? state.display + \" - \"\r\n          : state.accumulated != \"0\" ? state.accumulated + \" - \"\r\n            : history() + state.display + \" - \",\r\n        prevOp: \"operator\"\r\n      }\r\n    }\r\n    case ReduxCalculatorActionType.MULTIPLY: {\r\n      const history = () => state.prevOp === \"operator\" ? state.history.slice(0, state.history.length - 4)\r\n        : state.history;\r\n      return {\r\n        ...state,\r\n        display: state.display,\r\n        history: state.history == '0' && state.accumulated == \"0\" ? state.display + \" * \"\r\n          : state.accumulated != \"0\" ? state.accumulated + \" * \"\r\n            : history() + state.display + \" * \",\r\n        prevOp: \"operator\"\r\n      }\r\n    }\r\n    case ReduxCalculatorActionType.DIVIDE: {\r\n      const history = () => state.prevOp === \"operator\" ? state.history.slice(0, state.history.length - 4)\r\n        : state.history;\r\n      return {\r\n        ...state,\r\n        display: state.display,\r\n        history: state.history == '0' && state.accumulated == \"0\" ? state.display + \" / \"\r\n          : state.accumulated != \"0\" ? state.accumulated + \" / \"\r\n            : history() + state.display + \" / \",\r\n        prevOp: \"operator\"\r\n      }\r\n    }\r\n    case ReduxCalculatorActionType.CLEAR: {\r\n      return {\r\n        ...state,\r\n        display: '0',\r\n        prevOp: \"clear\",\r\n        accumulated: 0,\r\n        history: \"0\"\r\n      }\r\n    }\r\n    case ReduxCalculatorActionType.EQUAL: {\r\n      let states = state.history + state.display;\r\n      //@ts-ignore\r\n      let maths = math.eval(states);\r\n      if (state.prevOp === \"equal\") {\r\n        return {\r\n          ...state\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          history: math.round(maths, 4).toString(),\r\n          display: math.round(maths,4).toString(),\r\n          accumulated: maths.toString(),\r\n          prevOp: \"equal\",\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore } from \"redux\";\r\nimport calculatorReducer from \"../reducer/reducer\";\r\n\r\nexport default createStore(\r\n    calculatorReducer,\r\n);","import React from 'react';\r\nimport Calculator from './pages/Calculator';\r\nimport Home from './pages/Home';\r\nimport Movies from './pages/Movies';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Header from './components/Header';\r\nimport calculatorStore from \"./redux/calculator/store/store\";\r\nimport { Provider } from \"react-redux\"\r\n\r\nfunction App(store: any) {\r\n  return (\r\n    <>\r\n    <Router>\r\n    <div>\r\n      <Header />\r\n      <hr/>\r\n        <Switch>\r\n        <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n                return (\r\n                  <Redirect to=\"/home\" />\r\n                )\r\n            }}\r\n          />\r\n          <Route path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/calculator\">\r\n            <Provider store = {calculatorStore}>\r\n              {\r\n                // @ts-ignore\r\n                <Calculator />\r\n              }\r\n            </Provider>\r\n          </Route>\r\n          <Route path=\"/movies\">\r\n            <Movies />\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n    </Router>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\"\r\nimport calculatorStore from \"./redux/calculator/store/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {calculatorStore}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}